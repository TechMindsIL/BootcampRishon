<!DOCTYPE html>
<html lang="en">
<%- include('partials/head') %> <%- include('partials/insidenavbar') %>

        <head>
            <link rel="stylesheet" href="https://storage.googleapis.com/chipp-chat-widget-assets/build/bundle.css" />

            <style>
                :root {
                    --cardsInRow: 4;
                    --mainPadding: 17%;
                    --cardPadding: 0.7rem;
                    --filterCardsInRow: 6; 
                    --filterCardsGap: 10px;
                }

                .mainContent {
                    width: 100%;
                    padding: 0 var(--mainPadding);
                    margin-top: 90px;
                    margin-bottom: 60px;
                    display: flex;
                    flex-direction: column;
                    /* justify-content: center; */
                    min-height: calc(100vh - 200px);
                }

                .cardPadding {
                    aspect-ratio: 16/9;
                    padding: var(--cardPadding);
                    width: calc(100% / var(--cardsInRow));
                    flex-shrink: 0;
                }

                .categoryContainer {
                    margin-top: 10px;
                    width: 100%;
                    margin-right: auto;
                    margin-left: auto;
                }

                .card {
                    cursor: pointer;
                    border: none;
                    background: #d9d9d9;
                    border-radius: 20px;

                    width: 100%;
                    height: 100%;

                    display: flex;
                    justify-content: center;
                    text-align: center;
                    align-content: center;

                    box-shadow: 1.5px 3px 4px rgba(0, 0, 0, 0.25);
                }

                .card-title,
                .card-text {
                    text-align: center;
                }

                .card-body {
                    box-shadow: 2px 4px 5px #f16624;
                    background-color: #f16624;
                }

                .card-title {
                    padding: 25px;
                    font-size: 1.5em;
                    display: inline;
                    word-wrap: normal;
                }

                .cardContainer {
                    display: flex;
                    flex-direction: row-reverse;
                    flex-wrap: wrap;
                    overflow-x: visible;
                    overflow-y: hidden;
                    width: 100%;
                    margin-bottom: -10px;
                }

                .text-end {
                    padding: 0 0.7em;
                    font-size: 1.5em;
                    margin-top: -5px;
                    margin-bottom: calc(0 - var(--cardPadding));
                    font-weight: bold;
                }

                .centered-text {
                    margin-top: 50px;
                    text-align: center;
                }

                .invisibleText {
                    display: none;
                }

                #allTagsSection {
                    direction: rtl;
                    display: none;
                }

                div::-webkit-scrollbar {
                    height: 7px;
                    width: 5px;
                }

                div::-webkit-scrollbar-track {
                    background: transparent;
                }

                div::-webkit-scrollbar-thumb {
                    background-color: #818b99;
                    border-radius: 10px;
                }

                div::-webkit-scrollbar-thumb:hover {
                    background: #555;
                }

                #search-icon {
                    padding: 15px;
                    border: none;
                    background: transparent;
                    display: flex;
                    align-items: center;
                    height: 100%;
                }
            
                .bi-search {
                    font-size: 1.6em;
                }

                .search {
                    direction: rtl;
                    background: #efefef;
                    position: relative;
                    display: flex;
                    flex-wrap: wrap;
                    align-items: stretch;
                    width: 100%;
                    border-radius: 20px;
                    border: 1px solid #c6c6c6;
                }

                .searchForm {
                    width: 96%;
                    height: 55px;
                }

                input[type="text"] {
                    text-align: right;
                    width: 70%;
                    box-sizing: border-box;
                    border: none;
                    background-color: transparent;
                    color: black;
                    margin: 0;
                    height: 100%;
                }

                input[type="text"]:focus {
                    outline: none;
                    box-shadow: none;
                    background-color: transparent;
                }

                @media (max-width: 1400px) {
                    :root {
                        --cardsInRow: 3.5;
                    }
                }

                @media (max-width: 1155px) {
                    :root {
                        --mainPadding: 15%;
                        --cardsInRow: 3;
                        --filterCardsInRow: 5; 
                        --filterCardsGap: 10px;
                    }

                    .card-title {
                        padding: 15px;
                        font-size: 1.3em;
                    }
                    .caret{
                        left: 7px !important;
                        height: 45px !important;
                    }
                    .filterTitle{
                        font-size: 1.4rem !important;
                    }
                }

                @media (max-width: 1000px) {
                    :root {
                        --mainPadding: 13%;
                        --cardPadding: 0.4rem;
                    }

                    .card-title {
                        font-size: 1.2em;
                    }

                    .tagCard {
                        border-radius: 25px !important;
                    }

                    .text-end {
                        font-size: 1.35em;
                    }

                    .caret{
                        left: 4px !important;
                        height: 40px !important;
                    }
                    .filterTitle{
                        font-size: 1.3rem !important;
                    }
                }
                @media (max-width: 900px) {
                    :root {
                        --filterCardsInRow: 4; 
                        --filterCardsGap: 8px;
                    }
                    .caret{
                        height: 35px !important;
                    }
                    .filterTitle{
                        font-size: 1.2rem !important;
                    }
                }
                @media (max-width: 800px) {
                    :root {
                        --mainPadding: 11%;
                    }

                    .card-title {
                        font-size: 1.1em;
                    }

                    .tagCard {
                        border-radius: 20px !important;
                    }

                    .text-end {
                        font-size: 1.2em;
                    }

                    .filterCategoryContainer{
                        flex-direction: column !important;
                        align-items: center !important;
                        gap: 0px !important;
                    }
                    .filterCategory{
                        width: 70% !important;
                    }
                    .caret{
                        left: 10px !important;
                        height: 50px !important;
                    }
                    .filterTitle{
                        font-size: 1.4rem !important;
                    }
                    .filterCategoryCard{
                        height: 55px !important;
                    }
                } 

                @media (max-width: 600px) {
                    :root {
                        --cardsInRow: 2;
                        --filterCardsInRow: 3; 
                        --filterCardsGap: 5px;
                    }

                    .card-title {
                        font-size: 1.1em;
                    }

                    .bi-search {
                        font-size: 1.7rem;
                    }

                    .tagText {
                        font-size: 0.9rem !important;
                    }

                    .text-end {
                        font-size: 1.1em;
                    }

                    .filterCategory{
                        width: 80% !important;
                    }
                    .filterCategoryCard{
                        height: 50px !important;
                    }
                }
                @media (max-width: 480px) {
                    .filterCategory{
                        width: 85% !important;
                    }
                    .filterCategoryCard{
                        height: 45px !important;
                    }
                        .currentFilterText{
                            font-size: 80% !important;
                        }
                }
                @media (max-width: 400px) {
                    .tagText {
                        font-size: 0.8rem !important;
                    }

                    .card-title {
                        font-size: 0.9em;
                    }

                    .bi-search {
                        font-size: 1.3rem;
                    }
                    .filterCategory{
                        width: 90% !important;
                    }
                    .caret{
                        left: 3px !important;
                        height: 40px !important;
                    }
                    .filterTitle{
                        font-size: 1.2rem !important;
                    }
                    .currentFilterText{
                        font-size: 75% !important;
                        line-height: 0.8 !important;
                    }
                }

                @media (max-width: 370px) {
                    .tagText {
                        font-size: 0.8rem !important;
                    }

                    .card-title {
                        font-size: 0.75em;
                    }
                }


                #chipp-close-icon-container.svelte-1ho6q57 {
                    width: 60px;
                    height: 60px;
                }
            </style>

            <!-- Chipp Chat Widget -->
            <script>
                window.CHIPP_APP_URL = "https://makomrishon-24353.chipp.ai";
                window.CHIPP_APP_ID = 24353;
            </script>

        </head>

        <body onload="init()">
            <main class="mainContent">
                <div class="container">
                    <h1 class="text-center">כל האימונים</h1>
                </div>
                <%- include('./partials/filter') %>
                <%- include('./partials/allTags') %>

                <div id="all" class="mt-3">

                </div>
            </main>

            <script>
                // elements & data save
                const allContainer = document.getElementById("all");
                // const toggleIcon = document.getElementById("toggleTags");

                let fetchedRoutes = [];

                // utility
                const showAllTags = () => {
                    if (allTagsSection.classList.contains("show")) {
                        allTagsSection.classList.remove("show"); // Hide the allTags section
                        tagsDivider.classList.remove("show");

                        setTimeout(() => {
                            allTagsSection.style.display = "none";
                            tagsDivider.style.display = "none";
                        }, 300); // Wait for animation to complete before hiding
                    } else {
                        allTagsSection.style.display = "block"; // Show the allTags section
                        tagsDivider.style.display = "block"; // Show the allTags section

                        setTimeout(() => {
                            allTagsSection.classList.add("show");
                            tagsDivider.classList.add("show");
                        }, 10); // Allow display to apply before starting transition
                    }
                }

                const displayTitles = (show) => {
                    const titles = document.getElementsByClassName("text-end")
                    for (const title of titles) {
                        if (!show) {
                            title.classList.add("invisibleText")
                        } else {
                            title.classList.remove("invisibleText")
                        }
                    }
                }

                // events
                // toggleIcon.addEventListener("click", showAllTags);

                const categories = {
                    search: {
                        filter: (data, searchValue) => data.filter((route) => route.name.toLowerCase().includes(searchValue)).sort((a, b) => a.length < b.length),
                        name: ""
                    },
                    strength: {
                        filter: (data) => {
                            return data.filter((route) => {
                                return route.name.includes("כוח") &&
                                    !route.name.includes("אופניים")
                            })
                        },
                        name: "אימוני כוח",
                    },
                    bicycle: {
                        filter: (data) => data.filter((route) => {
                            return !route.name.includes("כוח") &&
                                route.name.includes("אופניים")
                        }),
                        name: "אימונים עם אופניים",
                    },
                    suggestions: {
                        // filter: (data) => data, //.slice(0, 3),
                        filter: (data) => {
                            // סינון נתיבים שכבר הופיעו בקטגוריות הקודמות
                            const filteredStrength = data.filter(route => route.name.includes("כוח") && !route.name.includes("אופניים"));
                            const filteredBicycle = data.filter(route => !route.name.includes("כוח") && route.name.includes("אופניים"));

                            // הסרת נתיבים שכבר סוננו
                            return data.filter(route =>
                                !filteredStrength.includes(route) && !filteredBicycle.includes(route)
                            );
                        }, name: "הצעות בשבילך",
                    },
                };

                const makeCards = (routes, container) => {
                    for (const route of routes) {
                        const div = document.createElement("div");

                        div.classList.add("cardPadding");

                        let bgImage = "/images/third-bg.png"; // ברירת מחדל

                        if (route.name.includes("כוח") && !route.name.includes("אופניים")) {
                            bgImage = "/images/first-bg.png";
                        } else if (!route.name.includes("כוח") && route.name.includes("אופניים")) {
                            bgImage = "/images/sec-bg.png";
                        }

                        div.onclick = () => {
                            window.location.href = `/map/?id=${route._id}`;
                        };

                        div.innerHTML = `
                            <div class="card" style="background-image: url('${bgImage}'); background-size: cover; background-position: center;">
                                <h5 class="card-title">${route.name}</h5>
                            </div>
                        `;
                        container.appendChild(div); // Add the newly created div to the DOM
                    }
                }

                const makeDiv = (category) => {
                    const container = document.createElement("div");
                    container.className = "categoryContainer"

                    const h2 = document.createElement("h2");
                    h2.className = "text-end";
                    h2.textContent = categories[category].name;

                    const cardContainer = document.createElement("div");
                    cardContainer.id = category;
                    cardContainer.className = "cardContainer";

                    container.appendChild(h2);
                    container.appendChild(cardContainer);

                    allContainer.appendChild(container);
                    return cardContainer
                }

                // Populate Suggestions section
                const populateDataDefault = () => {
                    allContainer.classList = ""
                    allContainer.innerHTML = ""

                    console.log("DEFAULT")

                    for (const category of Object.keys(categories)) {
                        const filteredData = categories[category].filter(fetchedRoutes)

                        const container = makeDiv(category)
                        makeCards(filteredData, container)
                    }
                };

                const filterByCurrentFilters = (data) => {
                    return data.filter(route => {
                        const categories = [...new Set(currentFilters.map(filter => filter.category.name))];

                        return categories.every(categoryName => {
                            const matchingTags = route.tags.filter(tag => tag.category.name === categoryName);

                            return matchingTags.some(tag =>{
                                return currentFilters.some(
                                    filter => filter.category.name === categoryName && filter.name === tag.name
                                );
                            });
                        });
                    });
                }

                const filterRoutes = (routes) => {
                    console.log(currentFilters)
                    console.log(currentSearchQuery)
                    if(!currentFilters.length && !currentSearchQuery.length){
                        populateDataDefault();
                        return;
                    }
                    routes = routes || fetchedRoutes;
                    
                    let filteredData = routes;

                    if(currentFilters.length){
                        filteredData = filterByCurrentFilters(filteredData);
                    }
                    if(currentSearchQuery.length){
                        filteredData = categories.search.filter(filteredData, currentSearchQuery)
                    }

                    allContainer.innerHTML = ""
                    allContainer.classList = "row justify-content-s flex-row-reverse"

                    if (filteredData.length) {
                        makeCards(filteredData, allContainer)
                        return;
                    }

                    allContainer.innerHTML = `
                        <h1 class="centered-text">לא נמצאו תוצאות חיפוש</h1>
                    `
                }

                // Function to fetch data from the API
                const fetchRoutes = async () => {
                    try {
                        const response = await fetch("/api/v1/routes");

                        if (!response.ok) {
                            throw new Error("Network response was not ok");
                        }

                        fetchedRoutes = await response.json();

                        fetchedRoutes = fetchedRoutes.filter(route => route.isRelevant === true);

                        return fetchedRoutes;
                    } catch (err) {
                        console.error("Couldn't fetch routes data:", error);
                    }
                };

                // Function to initialize the page and fetch data
                const init = async () => {
                    await fetchRoutes(); // wait for data to be fetched

                    populateDataDefault();
                };

                // Call init function when the page loads
                window.onload = init;
            </script>

            <!-- Chipp Chat Widget -->
            <script defer src="https://storage.googleapis.com/chipp-chat-widget-assets/build/bundle.js"></script>
        </body>

</html>