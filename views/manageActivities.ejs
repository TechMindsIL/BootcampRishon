<!DOCTYPE html>
<html lang="en">

<%- include('partials/head') %>
    <style>
        .container {
            direction: rtl;
        }

        h1 {
            margin: 0 auto;
        }

        #addPlaceBtn {
            margin: 15px auto;
            display: block;
            padding: 10px 20px;
            font-size: 18px;
            background-color: #f8f9fa;
            border: 5px solid black;
            color: black;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
        }

        #addPlaceBtn:hover {
            color: white;
            background-color: black;
            opacity: 80%;
        }

        #tagsContainer {
            display: flex;
            overflow-x: auto;
            white-space: nowrap;
            padding: 10px;
        }

        .tag-button {
            margin: 5px;
            background-color: #f8f9fa;
        }

        .tag-button.selected {
            background-color: black;
            color: white;
        }

        .places-container {
            display: flex;
            overflow-x: auto;
            padding: 10px;
            gap: 15px;
        }

        .place-card {
            width: 200px;
            /* height: 120px; */
            height: auto;
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 12px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
        }

        .place-card h6 {
            font-size: 16px;
            margin: 0;
            padding: 0;
            text-align: center;
        }

        .places-container::-webkit-scrollbar {
            height: 8px;
        }

        .places-container::-webkit-scrollbar-thumb {
            background-color: #888;
            border-radius: 10px;
        }

        .places-container::-webkit-scrollbar-thumb:hover {
            background-color: #555;
        }

        /* #placesContainer {
            padding: 20px;
        } */

        /* .place-card {
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            margin: 10px 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        } */

        #placesContainer {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            gap: 15px;
            flex-wrap: wrap;
            /* max-height: 50vh; */
            /* overflow-y: scroll; */
            margin-top: 10px;
        }

        #placesContainer::-webkit-scrollbar,
        #tagsContainer::-webkit-scrollbar {
            height: 7px;
            width: 5px;
        }

        #placesContainer::-webkit-scrollbar-track,
        #tagsContainer::-webkit-scrollbar-track {
            background: transparent;
        }

        #placesContainer::-webkit-scrollbar-thumb,
        #tagsContainer::-webkit-scrollbar-thumb {
            background-color: #818b99;
            border-radius: 10px;
        }

        #placesContainer::-webkit-scrollbar-thumb:hover,
        #tagsContainer::-webkit-scrollbar-thumb:hover {
            background: #555;
        }

        .bg-light .place-actions button:hover {
            color: white !important;
        }

    </style>

    <body>
        <%- include('partials/navbar', {currentPage: 'Manage Activities' }) %>
            <div class="container" style="max-width: 70%;">

                <h1 class="text-center">כל התחנות</h1>

                <button id="addPlaceBtn" onclick="window.location.href='/admin/add-new-activity'"> הוספת תחנה</button>

                <div class="input-group mb-3" style="direction: ltr;">
                    <span class="input-group-text" id="search-addon">
                        <i class="fas fa-search"></i> <!-- אייקון חיפוש -->
                    </span>
                    <input type="text" id="searchInput" class="form-control" placeholder="חפש תחנה..."
                        aria-label="חפש תחנה" aria-describedby="search-addon" style="direction: rtl;">
                </div>


                <div id="tagsContainer" class="d-flex">
                    <!-- כאן יתווספו כפתורי התגיות -->
                </div>

                <div id="placesContainer">
                    <!-- הצגת התחנות -->
                </div>

            </div>

            <script>
                $(document).ready(async function () {
                    loadTagsForCategory();

                    fetchAndFilterPlaces();
                });

                let selectedTags = [];

                async function loadTagsForCategory() {
                    try {
                        const response = await fetch('/api/v1/categories/search?name=סוג מתקן');
                        const categories = await response.json();

                        const categoryId = categories[0]._id;
                        if (categoryId) {
                            const tagsResponse = await fetch(`/api/v1/tags/category/${categoryId}`);
                            const tags = await tagsResponse.json();

                            const tagsContainer = $('#tagsContainer');
                            tagsContainer.empty();
                            tags.forEach(tag => {
                                const button = $(`<button class="tag-button btn btn-outline-dark mx-1" data-tag-id="${tag._id}">${tag.name}</button>`);

                                button.on('click', function () {
                                    const tagId = tag._id;
                                    if (selectedTags.includes(tagId)) {
                                        selectedTags = selectedTags.filter(id => id !== tagId);
                                        button.removeClass('selected');
                                    } else {
                                        selectedTags.push(tagId);
                                        button.addClass('selected');
                                    }
                                    fetchAndFilterPlaces();
                                    console.log('Selected Tags:', selectedTags);
                                });

                                tagsContainer.append(button);
                            });
                        } else {
                            console.error('קטגוריה לא נמצאה');
                        }
                    } catch (error) {
                        console.error('שגיאה במהלך שליפת הקטגוריות או התגיות:', error);
                    }
                }

                $('#searchInput').on('input', function () {
                    fetchAndFilterPlaces();
                });

                async function fetchAndFilterPlaces() {
                    try {
                        const response = await fetch('/api/v1/places');
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        const places = await response.json();

                        const searchQuery = $('#searchInput').val().toLowerCase();

                        if (selectedTags.length === 0 && searchQuery === '') {
                            displayPlaces(places);
                            return;
                        }

                        const filteredPlaces = places.filter(place => {
                            const matchesTag = selectedTags.length === 0 || place.tags.some(tag => selectedTags.includes(tag._id));
                            const matchesSearch = searchQuery === "" || place.name.toLowerCase().startsWith(searchQuery);

                            return matchesTag && matchesSearch;
                        });

                        displayPlaces(filteredPlaces);
                    } catch (error) {
                        console.error('Error fetching places:', error);
                    }
                }

                async function displayPlaces(places) {
                    // const groupedPlaces = {};

                    // places.forEach(place => {
                    //     if (place.tags.length === 0) {
                    //         if (!groupedPlaces['תחנות נוספות']) {
                    //             groupedPlaces['תחנות נוספות'] = [];
                    //         }
                    //         groupedPlaces['תחנות נוספות'].push(place);
                    //     } else {
                    //         place.tags.forEach(tag => {
                    //             if (!groupedPlaces[tag.name]) {
                    //                 groupedPlaces[tag.name] = [];
                    //             }
                    //             groupedPlaces[tag.name].push(place);
                    //         });
                    //     }
                    // });

                    const container = $('#placesContainer');
                    container.empty();
                    // const sortedTags = Object.keys(groupedPlaces).sort((a, b) => a.localeCompare(b));
                    // sortedTags.forEach(tag => {
                    //     const tagHeader = $('<h5>').text(tag);
                    //     container.append(tagHeader);

                    //     const placesContainer = $('<div class="places-container"></div>');

                    //     groupedPlaces[tag].forEach(place => {
                    places.forEach(place => {
                        const backgroundColorClass = place.isRelevant ? 'bg-light' : 'bg-secondary';

                        const placeCard = $(`
                                <div class="place-card ${backgroundColorClass}">
                                    <h6>${place.name}</h6>
                                    <div class="place-actions text-right d-flex justify-content-between align-items-center">
                                        <button class=" btn btn-outline-dark" onclick="window.location.href= '/admin/edit-activity?id=${place._id}'">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-outline-danger" onclick="updatePlaceStatus('${place._id}')">
                                        ${place.isRelevant
                                            ? `<i class="fas fa-trash"></i>`
                                            : `<i class="fas fa-undo"></i>`
                                            }
                                        </button>
                                    </div>
                                </div>
                            `);

                        container.append(placeCard);
                        // placesContainer.append(placeCard);
                    });
                    // container.append(placesContainer);
                    // })
                }

                async function getPlaceById(placeId) {
                    try {
                        const response = await fetch(`/api/v1/places/${placeId}`);
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return await response.json();
                    } catch (error) {
                        console.error('Error fetching place:', error);
                        alert('אירעה שגיאה. אנא נסה שוב מאוחר יותר.');
                    }
                }

                async function updatePlaceStatus(placeId) {
                    console.log("jjjjjjjjjjjjj");
                    try {
                        let place = await getPlaceById(placeId);
                        console.log("hhhhhhhhhhhhhhh");
                        if (place) {
                            const updatedPlace = {
                                name: place.name,
                                description: place.description,
                                img: place.img,
                                youtube: place.youtube,
                                coordinates: {
                                    longitude: place.longitude,
                                    latitude: place.latitude
                                },
                                tags: place.tags,
                                ratings: place.ratings,
                                averageRating: place.averageRating,
                                isRelevant: !place.isRelevant
                            };
                            console.log(updatedPlace)
                            $.ajax({
                                url: `/api/v1/places/${placeId}`,
                                method: 'PUT',
                                contentType: 'application/json',
                                data: JSON.stringify(updatedPlace),
                                success: function () {
                                    fetchAndFilterPlaces();
                                    console.log("fghjkhvcxcv");
                                },
                                error: function (xhr, status, error) {
                                    console.error('Error updating place:', error);
                                    alert(`Error updating the status of the place: ${xhr.responseText || status}`);
                                }
                            });
                        } else {
                            console.error('Place not found or error fetching.');
                            alert('Place not found or error fetching.');
                        }
                    } catch (error) {
                        console.error('An error occurred:', error);
                        alert('An error occurred while fetching place data.');
                    }
                }

            </script>
    </body>

</html>